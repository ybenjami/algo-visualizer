[{"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/index.js":"1","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/App.js":"2","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/reportWebVitals.js":"3","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/Counter.js":"4","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/BubbleSort.js":"5","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/InsertionSort.js":"6","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/SelectionSort.js":"7","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer.js":"8","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/Kadane.js":"9"},{"size":504,"mtime":1608267817648,"results":"10","hashOfConfig":"11"},{"size":3104,"mtime":1611114919857,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608255522921,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1608774698734,"results":"14","hashOfConfig":"11"},{"size":2678,"mtime":1609832107401,"results":"15","hashOfConfig":"11"},{"size":2467,"mtime":1609651828952,"results":"16","hashOfConfig":"11"},{"size":3176,"mtime":1611115009678,"results":"17","hashOfConfig":"11"},{"size":3406,"mtime":1610115794108,"results":"18","hashOfConfig":"11"},{"size":3039,"mtime":1611112862035,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"cgzhdr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/index.js",[],["41","42"],"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/App.js",["43","44","45"],"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/reportWebVitals.js",[],"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/Counter.js",[],"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/BubbleSort.js",["46","47","48","49"],"import React, { useState } from \"react\";\n\nconst BubbleSort = ({input}) => {\n    const [randomArray, setRandomArray] = useState(input);\n    const [run, setRun] = useState(true);\n    const [count, setCount] = useState('');\n    const [compA, setCompA] = useState('');\n    const [compB, setCompB] = useState('');\n    const [swapA, setSwapA] = useState('');\n    const [swapB, setSwapB] = useState('');\n\n\n    const listArray = randomArray.map((val, index) =>{\n        if(index === compA || index === compB){\n            return <div className={`array-bar-working ${index}`} style={{height: `${val}px`}}><span>{val}</span></div>;\n        }\n\n        if(index === swapA || index === swapB){\n            return <div className={`array-bar-swapping ${index}`} style={{height: `${val}px`}}><span>{val}</span></div>;\n        }\n        return <div className={`array-bar ${index}`} style={{height: `${val}px`}}><span>{val}</span></div>;\n      });\n\n\n    const swap = (array,  leftValue,  rightValue) =>{\n        if(leftValue==rightValue) {\n            return;\n        }\n            setCompA('');\n            setCompB('');\n            setSwapA(leftValue);\n            setSwapB(rightValue);\n            let temp = array[leftValue];\n            array[leftValue] = array[rightValue];\n            array[rightValue] = temp;\n            setRandomArray([...array]);\n        }\n      \n      \n    const outterLoop = (sortedPartition, array) => {\n        let counter = 0;\n        let c = (array.length *200)\n        if(sortedPartition === array.length-1){\n           c=0;\n        }\n        \n        setTimeout(() => {\n            for(let i = 0; i < sortedPartition; i++) {\n                  innerLoop(i, array);\n                  counter += (i+1)*1\n            }\n        }, ((((array.length-sortedPartition ) + 1) * c  )));\n      }\n\n    const innerLoop = (f, array) => {\n\n        setTimeout(() => {\n            comparVisualize(f, f+1);\n            if(array[f] > array[f +1]) {\n                    swap(array, f, f+1);\n                  \n                    \n            }\n         }, ((f+1)*500));\n       }\n\n    const sort = () => {\n        if(run){\n            setRun(false);\n            let array = randomArray;\n            for(let j = array.length -1; j > 0; j--) {\n                outterLoop(j, array);\n            }\n            return array;\n        }\n           return\n        }\n    \n\n    const comparVisualize= (a, b) => {\n            setSwapA('');\n            setSwapB('');\n            setCompA(a);\n            setCompB(b);\n    }\n\n    sort();\n    return(\n            <div className=\"array-container\" >\n                {listArray}\n            </div>\n       \n        \n    )\n}\nexport default BubbleSort;","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/InsertionSort.js",["50"],"import React, { useState } from \"react\";\n\nconst InsertionSort = ({input}) => {\n    const [randomArray, setRandomArray] = useState(input);\n    const [run, setRun] = useState(true);\n    const [compA, setCompA] = useState('');\n    const [compB, setCompB] = useState('');\n    const [swapA, setSwapA] = useState('');\n    const [swapB, setSwapB] = useState('');\n\n\n    const listArray = randomArray.map((val, index) =>{\n        if(index === compA || index === compB){\n            return <div className={`array-bar-working ${index}`} style={{height: `${val}px`}}><span>{val}</span></div>;\n        }\n\n        if(index === swapA || index === swapB){\n            return <div className={`array-bar-swapping ${index}`} style={{height: `${val}px`}}><span>{val}</span></div>;\n        }\n        return <div className={`array-bar ${index}`} style={{height: `${val}px`}}><span>{val}</span></div>;\n      });\n\n      \n    const sort = () => {\n        if(run){\n            setRun(false);\n            let arr = randomArray;\n            for (let index = 1; index < randomArray.length; ++index) { \n              setTimeout(() => {\n                let currentValue = randomArray[index]; \n                let previousPosition = index - 1; \n            \n                //Swap within the sorted partition of the Array\n                while (previousPosition >= 0 && randomArray[previousPosition] > currentValue ) { \n                       // comparVisualize(previousPosition, currentValue);\n                        randomArray[previousPosition + 1] = randomArray[previousPosition];\n                        swap(previousPosition + 1, previousPosition)\n                   \n                         previousPosition = previousPosition - 1; \n                     \n                        \n                } \n                \n                randomArray[previousPosition + 1] = currentValue; \n                setRandomArray([...randomArray]);\n\n              return randomArray;\n            }, (index * 1000));\n        }\n            \n      }\n      return\n    }\n    const swap = (leftValue,  rightValue) =>{\n        setTimeout(() => {\n            setCompA('');\n            setCompB('');\n            setSwapA(leftValue);\n            setSwapB(rightValue);\n            setRandomArray([...randomArray]);\n         }, (60));\n        }\n\n    sort();\n    return(\n            <div className=\"array-container\" >\n                {listArray}\n            </div>\n       \n        \n    )\n}\nexport default InsertionSort;","/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer/SelectionSort.js",[],"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/SortingVisualizer.js",[],"/Users/ybenjami/Documents/youreOnyaron/visual-sort/visual-sort/src/Kadane.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":31,"column":25,"nodeType":"58","endLine":31,"endColumn":80},{"ruleId":"56","severity":1,"message":"57","line":45,"column":21,"nodeType":"58","endLine":45,"endColumn":76},{"ruleId":"56","severity":1,"message":"57","line":57,"column":21,"nodeType":"58","endLine":57,"endColumn":76},{"ruleId":"59","severity":1,"message":"60","line":6,"column":12,"nodeType":"61","messageId":"62","endLine":6,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":6,"column":19,"nodeType":"61","messageId":"62","endLine":6,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":26,"column":21,"nodeType":"66","messageId":"67","endLine":26,"endColumn":23},{"ruleId":"59","severity":1,"message":"68","line":50,"column":19,"nodeType":"61","messageId":"62","endLine":50,"endColumn":26},{"ruleId":"59","severity":1,"message":"69","line":27,"column":17,"nodeType":"61","messageId":"62","endLine":27,"endColumn":20},{"ruleId":"64","severity":1,"message":"70","line":38,"column":41,"nodeType":"66","messageId":"67","endLine":38,"endColumn":43},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'setCount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'counter' is assigned a value but never used.","'arr' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]